(undo-tree-save-format-version . 1)
"d48b8f7bb5c9177fbb173ab23e44328d3290ea0b"
[nil nil nil nil (26267 16723 266604 390000) 0 nil]
([nil nil ((#("Intoduction to Front-End" 0 24 (wrap-prefix "" line-prefix "" face org-document-title font-lock-fontified t fontified t)) . 10) (undo-tree-id127 . -23) (undo-tree-id128 . -23) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -12) (undo-tree-id132 . -12) (undo-tree-id133 . -12) (undo-tree-id134 . -12) (undo-tree-id135 . -12) (undo-tree-id136 . -12) (undo-tree-id137 . -12) (undo-tree-id138 . -12) (undo-tree-id139 . -12) (undo-tree-id140 . -15) (undo-tree-id141 . -15) (undo-tree-id142 . -15) (undo-tree-id143 . -15) (undo-tree-id144 . -15) (undo-tree-id145 . -15) (undo-tree-id146 . -15) (undo-tree-id147 . -15) (undo-tree-id148 . -15) (undo-tree-id149 . -15) (undo-tree-id150 . -15) (undo-tree-id151 . -15) (undo-tree-id152 . -15) (undo-tree-id153 . -15) (undo-tree-id154 . -15) (undo-tree-id155 . -20) (undo-tree-id156 . -20) (undo-tree-id157 . -20) (undo-tree-id158 . -20) (undo-tree-id159 . -20) (undo-tree-id160 . -20) (undo-tree-id161 . -20) (undo-tree-id162 . -20) (undo-tree-id163 . -20) (undo-tree-id164 . -20) (undo-tree-id165 . -20) (undo-tree-id166 . -20) (undo-tree-id167 . -20) (undo-tree-id168 . -20) (undo-tree-id169 . -20) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -21) (undo-tree-id174 . -21) (undo-tree-id175 . -21) (undo-tree-id176 . -21) (undo-tree-id177 . -21) (undo-tree-id178 . -21) (undo-tree-id179 . -21) (undo-tree-id180 . -21) (undo-tree-id181 . -21) (undo-tree-id182 . -21) (undo-tree-id183 . -21) (undo-tree-id184 . -21) (undo-tree-id185 . -21) (undo-tree-id186 . -21) (undo-tree-id187 . -21) (undo-tree-id188 . -21) (undo-tree-id189 . -21) (undo-tree-id190 . -21) (undo-tree-id191 . -21) (undo-tree-id192 . -21) (undo-tree-id193 . -21) (undo-tree-id194 . -21) (undo-tree-id195 . -21) (undo-tree-id196 . -21) (undo-tree-id197 . -21) (undo-tree-id198 . -21) (undo-tree-id199 . -21) (undo-tree-id200 . -21) (undo-tree-id201 . -21) (undo-tree-id202 . -21) (undo-tree-id203 . -21) (undo-tree-id204 . -21) (undo-tree-id205 . -21) (undo-tree-id206 . -21) (undo-tree-id207 . -21) (undo-tree-id208 . -21) (undo-tree-id209 . -21) (undo-tree-id210 . -21) (undo-tree-id211 . -21) (undo-tree-id212 . -21) (undo-tree-id213 . -21) (undo-tree-id214 . -21) (undo-tree-id215 . -21) (undo-tree-id216 . -21) (undo-tree-id217 . -21) (undo-tree-id218 . -21) (undo-tree-id219 . -21) (undo-tree-id220 . -21) (undo-tree-id221 . -21) (undo-tree-id222 . -21) (undo-tree-id223 . -21) (undo-tree-id224 . -21) (undo-tree-id225 . -21) (undo-tree-id226 . -21) (undo-tree-id227 . -21) (undo-tree-id228 . -21) (undo-tree-id229 . -21) (undo-tree-id230 . -23) (undo-tree-id231 . -23) (undo-tree-id232 . -23) (undo-tree-id233 . -23) (undo-tree-id234 . -23) (undo-tree-id235 . -23) (undo-tree-id236 . -23) (undo-tree-id237 . -23) (undo-tree-id238 . -23) (undo-tree-id239 . -23) (undo-tree-id240 . -23) (undo-tree-id241 . -23) (undo-tree-id242 . -23) (undo-tree-id243 . -23) (undo-tree-id244 . -23) (undo-tree-id245 . -23) (undo-tree-id246 . -23) (undo-tree-id247 . -24) (undo-tree-id248 . -23) 33 (t 26267 16357 993821 129000)) nil (26267 16723 266599 801000) 0 nil])
([nil nil ((33 . 42) (30 . 33) (27 . 27) (27 . 30) (#("b" 0 1 (face org-document-title ws-butler-chg chg wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -27) (undo-tree-id125 . -1) 28 (9 . 28) (#("a" 0 1 (face org-document-title ws-butler-chg chg wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -9) (undo-tree-id126 . -1) 10 (9 . 10)) nil (26267 16723 266542 42000) 0 nil])
([nil nil ((#(" " 0 1 (face org-document-title ws-butler-chg delete font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . 42) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . 1)) nil (26267 16723 266534 27000) 0 nil])
([nil nil ((#("#+EXPORT_FILE_NAME: intro_to_fronend_dev.html
" 0 45 (wrap-prefix "" line-prefix "" face org-meta-line font-lock-fontified t fontified t) 45 46 (wrap-prefix "" line-prefix "" fontified t)) . 90) (undo-tree-id271 . -45) (undo-tree-id272 . -40) 130 (t 26267 16723 283336 930000)) nil (26267 17171 594341 98000) 0 nil])
([nil nil ((1406 . 1409) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1406) (undo-tree-id266 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1407) (undo-tree-id267 . -1) 1408 (1405 . 1408) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1405) (undo-tree-id268 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1406) (undo-tree-id269 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1407) (undo-tree-id270 . -1) 1408 (1404 . 1408) 1404) nil (26267 17171 594338 343000) 0 nil])
([nil nil ((1403 . 1407) (#("** " 0 1 (ws-butler-chg delete wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1403) (#("
" 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1403) (undo-tree-id262 . -1) (#("
" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1404) (undo-tree-id263 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1405) (undo-tree-id264 . -1) 1406 (1405 . 1406) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1405) (undo-tree-id265 . -1) 1406) nil (26267 17171 594333 804000) 0 nil])
([nil nil ((110 . 111) 92) nil (26267 17171 594330 829000) 0 nil])
([nil nil ((#("
** How the internet works
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (0 1 [32 8228]) face org-superstar-leading fontified t) 2 3 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) composition (1 1 [9675]) face (org-superstar-header-bullet org-level-2) fontified t) 3 4 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 4 26 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 26 27 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 111) (undo-tree-id260 . -26) (undo-tree-id261 . 27)) nil (26267 17171 594330 178000) 0 nil])
([nil nil ((nil ws-butler-chg delete 138 . 139) (111 . 138)) nil (26267 17171 594328 805000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 111) (undo-tree-id259 . 1)) nil (26267 17171 594328 274000) 0 nil])
([nil nil ((1430 . 1447) (1422 . 1430) (1421 . 1421) (1421 . 1422) (1417 . 1417) (1417 . 1421) (#("n" 0 1 (face org-level-2 ws-butler-chg chg wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1417) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 1418 (1417 . 1418) (1407 . 1407) (1407 . 1417)) nil (26267 17171 594326 831000) 0 nil])
([nil nil ((1404 . 1405)) nil (26267 17171 594324 517000) 0 nil])
([nil nil ((1448 . 1449) 1405) nil (26267 17171 594324 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1449 . 1450) (#("
" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -1450) (1449 . 1451)) nil (26267 17171 594323 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2946 . 2947) (nil fontified nil 2757 . 2947) (nil fontified nil 2756 . 2757) (nil fontified nil 2464 . 2756) (nil fontified nil 2463 . 2464) (nil fontified nil 2264 . 2463) (nil fontified nil 2263 . 2264) (nil fontified nil 2019 . 2263) (nil fontified nil 2018 . 2019) (nil fontified nil 1747 . 2018) (nil fontified nil 1746 . 1747) (nil fontified nil 1451 . 1746) (nil fontified nil 1450 . 1451) (nil fontified nil 1449 . 1450) (1449 . 2947)) nil (26267 17171 594322 513000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1449)) nil (26267 17171 594320 419000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1449)) nil (26267 17171 594319 217000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2735) (#("    " 0 4 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2446) (#("    " 0 4 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2250) (#("    " 0 4 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2009) (#("    " 0 4 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -1741) (#("    " 0 1 (fontified t ws-butler-chg delete wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 4 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -1449) 2946) nil (26267 17171 594318 195000) 0 nil])
([nil nil ((1450 . 1451) (#("/" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1450) (undo-tree-id256 . -1) 1451 (1449 . 1451)) nil (26267 17171 594316 732000) 0 nil])
([nil nil ((1451 . 1452)) nil (26267 17171 594315 330000) 0 nil])
([nil nil ((1744 . 1747)) nil (26267 17171 594314 568000) 0 nil])
([nil nil ((1235 . 1238)) nil (26267 17171 594313 977000) 0 nil])
([nil nil ((2018 . 2020)) nil (26267 17171 594313 296000) 0 nil])
([nil nil ((#("2." 0 2 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1747) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 1748) nil (26267 17171 594312 605000) 0 nil])
([nil nil ((nil ws-butler-chg delete 1749 . 1750) (1747 . 1749)) nil (26267 17171 594309 709000) 0 nil])
([nil nil ((#("+" 0 1 (face org-superstar-item composition (3 1 [10148]) fontified t ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2018)) nil (26267 17171 594308 667000) 0 nil])
([nil nil ((2018 . 2020)) nil (26267 17171 594308 6000) 0 nil])
([nil nil ((2263 . 2265) (#("/" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2263) (undo-tree-id251 . -1) 2264 (2262 . 2264)) nil (26267 17171 594307 264000) 0 nil])
([nil nil ((2461 . 2463)) nil (26267 17171 594305 692000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2462)) nil (26267 17171 594305 281000) 0 nil])
([nil nil ((2462 . 2464)) nil (26267 17171 594304 650000) 0 nil])
([nil nil ((2754 . 2756) (#(" " 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -2754) (undo-tree-id250 . -1) 2755 (2753 . 2755)) nil (26267 17171 594303 317000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 2009)) nil (26267 17171 594301 193000) 0 nil])
([nil nil ((2009 . 2010)) nil (26267 17171 594300 542000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 1996)) nil (26267 17171 594299 810000) 0 nil])
([nil nil ((1996 . 1997) (#("v" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -1996) (undo-tree-id249 . -1) 1997 (1996 . 1997)) nil (26267 17171 594298 448000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2939) (2940 . 2940) (#("   " 0 3 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1235)) nil (26267 17171 594286 445000) 0 nil])
([nil nil ((#("j" 0 1 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t)) . -91) (undo-tree-id354 . -1) 92 (91 . 92) (90 . 91) (t 26267 17171 610568 241000) 90) nil (26267 17623 854840 234000) 0 nil])
([nil nil ((124 . 130) (119 . 119) (119 . 124) (113 . 113) (113 . 119) (106 . 114) (#("s" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -106) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("w" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -107) (undo-tree-id347 . -1) (undo-tree-id348 . -1) 108 (107 . 107) (107 . 108) (104 . 107) (102 . 102) (102 . 104) (#("b" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -102) (undo-tree-id349 . -1) (#("w" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -103) (undo-tree-id350 . -1) 104 (94 . 104) (91 . 95) (#("i" 0 1 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t)) . -91) (undo-tree-id351 . -1) (#("-" 0 1 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t)) . -92) (undo-tree-id352 . -1) 93 (91 . 93) (#("-" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -91) (undo-tree-id353 . -1) 92 (91 . 92) (90 . 91) 90) nil (26267 17623 854837 188000) 0 nil])
([nil nil ((104 . 106) (#(" " 0 1 (ws-butler-chg delete wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 104) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("b" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -104) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) 105) nil (26267 17623 854827 700000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 102) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (101 . 102)) nil (26267 17623 854801 401000) 0 nil])
([nil nil ((97 . 98) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 97)) nil (26267 17623 854781 524000) 0 nil])
([nil nil ((#("H" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 94) (t 26267 17623 874699 37000)) nil (26267 17658 929186 393000) 0 nil])
([nil nil ((94 . 96)) nil (26267 17658 929182 966000) 0 nil])
([nil nil ((94 . 96) (#("{" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified nil)) . -94) (undo-tree-id411 . -1) (#("}" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 95) (94 . 96) (t 26267 17658 948357 85000)) nil (26267 17809 927543 502000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 95) (undo-tree-id410 . 1)) nil (26267 17809 927541 629000) 0 nil])
([nil nil ((113 . 114) (#("}" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified nil)) . -113) (113 . 114)) nil (26267 17809 927540 536000) 0 nil])
([nil nil ((#("}" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 113)) nil (26267 17809 927539 665000) 0 nil])
([nil nil ((113 . 114) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified nil)) . -113) (113 . 114)) nil (26267 17809 927539 14000) 0 nil])
([nil nil ((113 . 136) (#("] [How the web works]]" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (ws-butler-chg delete wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 2 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 21 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 113) (undo-tree-id408 . 21) (undo-tree-id409 . 21)) nil (26267 17809 927538 282000) 0 nil])
([nil nil ((nil ws-butler-chg delete 135 . 136) (113 . 135) (#("
] [How the web works]]" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t) 2 3 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t) 3 22 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t) 22 23 (ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t)) . 113) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1)) nil (26267 17809 927536 369000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -136) (undo-tree-id404 . -2) 138 (135 . 138) 113) nil (26267 17809 927533 373000) 0 nil])
([nil nil ((nil rear-nonsticky nil 169 . 170) (nil fontified nil 136 . 170) (136 . 170)) nil (26267 17809 927532 61000) 0 nil])
([nil nil ((#("Intr" 0 4 (face org-link font-lock-multiline t htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "")) . 155) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) 158) nil (26267 17809 927530 888000) 0 nil])
([nil nil ((#("oduction]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg delete wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "") 1 7 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "") 7 8 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "") 8 9 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "")) . 155) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . 7) (undo-tree-id396 . -6) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -8) 163) nil (26267 17809 927528 364000) 0 nil])
([nil nil ((166 . 172) (158 . 166) (155 . 155) (155 . 158)) nil (26267 17809 927524 707000) 0 nil])
([nil nil ((#("- [[#how-the-web-works] [How the web works]]
" 0 1 (face org-superstar-item composition (4 1 [8211]) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 3 4 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 4 5 (ws-butler-chg delete wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 7 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 10 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 14 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 18 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 22 23 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 23 24 (ws-butler-chg delete wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 24 43 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 43 44 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 44 45 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 91) (undo-tree-id387 . -44) (undo-tree-id388 . -22) (undo-tree-id389 . -22) (undo-tree-id390 . -22) (undo-tree-id391 . -35) 126) nil (26267 17809 927523 454000) 0 nil])
([nil nil ((#("introduction" 0 12 (htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "")) . 96) (undo-tree-id384 . -11) (undo-tree-id385 . -11) (undo-tree-id386 . -11)) nil (26267 17809 927520 258000) 0 nil])
([nil nil ((103 . 113) (#(" " 0 1 (htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "")) . -103) (undo-tree-id382 . -1) 104 (96 . 104) (#("H" 0 1 (htmlize-link (:uri "#introduction") help-echo "LINK: #introduction" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "")) . -96) (undo-tree-id383 . -1) 97 (96 . 97)) nil (26267 17809 927516 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 134 . 135) (#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified nil ws-butler-chg chg rear-nonsticky t)) . -177) (134 . 178)) nil (26267 17809 927513 696000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t ws-butler-chg chg wrap-prefix "" line-prefix "" fontified t)) . 134)) nil (26267 17809 927512 93000) 0 nil])
([nil nil ((#("- [[#how-the-web-works][How the web works]
" 0 1 (face org-superstar-item composition (4 1 [8211]) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg delete) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg) 2 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary htmlize-link (:uri "#introduction")) 22 23 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary htmlize-link (:uri "#introduction")) 23 24 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary htmlize-link (:uri "#introduction") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 24 41 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 41 42 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary htmlize-link (:uri "#introduction")) 42 43 (ws-butler-chg delete wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 134) (undo-tree-id355 . -42) (undo-tree-id356 . -43) (undo-tree-id357 . -43) (undo-tree-id358 . -43) (undo-tree-id359 . -43) (undo-tree-id360 . -43) (undo-tree-id361 . -43) (undo-tree-id362 . -43) (undo-tree-id363 . -43) (undo-tree-id364 . -43) (undo-tree-id365 . -43) (undo-tree-id366 . -43) (undo-tree-id367 . -43) (undo-tree-id368 . -43) (undo-tree-id369 . -43) (undo-tree-id370 . -43) (undo-tree-id371 . -43) (undo-tree-id372 . -43) (undo-tree-id373 . -43) (undo-tree-id374 . -43) (undo-tree-id375 . -43) (undo-tree-id376 . -43) (undo-tree-id377 . -43) (undo-tree-id378 . -43) (undo-tree-id379 . -43) (undo-tree-id380 . -43) (undo-tree-id381 . -43)) nil (26267 17809 927508 857000) 0 nil])
([nil nil ((133 . 134) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified nil)) . -133) (133 . 134) (t 26267 17809 943092 976000)) nil (26267 18605 884407 590000) 0 nil])
([nil nil ((128 . 129) (#("o" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -128) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (#("h" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg chg htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . -129) (undo-tree-id3114 . -1) (#("h" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg)) . -130) (undo-tree-id3115 . -1) (#("h" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t ws-butler-chg chg)) . -131) (undo-tree-id3116 . -1) 132 (129 . 132)) nil (26267 18605 884406 318000) 0 nil])
([nil nil ((#("How the web works" 0 13 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 13 14 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg chg htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 14 15 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg delete htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 15 16 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t) 16 17 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix "" fontified t)) . 115) (undo-tree-id3096 . 3) (undo-tree-id3097 . -16) (undo-tree-id3098 . -16) (undo-tree-id3099 . -16) (undo-tree-id3100 . -16) (undo-tree-id3101 . -16) (undo-tree-id3102 . -13) (undo-tree-id3103 . -13) (undo-tree-id3104 . -16) (undo-tree-id3105 . -13) (undo-tree-id3106 . -16) (undo-tree-id3107 . -16) (undo-tree-id3108 . -16) 131) nil (26267 18605 884400 557000) 0 nil])
([nil nil ((nil ws-butler-chg delete 132 . 133) (115 . 132)) nil (26267 18605 884394 967000) 0 nil])
([nil nil ((164 . 165) (#("s" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# how-the-internet-works") help-echo "LINK: # how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -164) (undo-tree-id3057 . -1) (#(" " 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "# how-the-internet-works ") help-echo "LINK: # how-the-internet-works " keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -165) (undo-tree-id3058 . -1) 166 (165 . 166) (#("[" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified nil)) . -165) (undo-tree-id3059 . -1) (#("]" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . 166) (165 . 167) (162 . 165) (161 . 161) (161 . 162) (#("k" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "# how-the-internet-wk") help-echo "LINK: # how-the-internet-wk" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -161) (undo-tree-id3060 . -1) 162 (153 . 162) (146 . 146) (146 . 153) (143 . 143) (143 . 146) (#("H" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# H") help-echo "LINK: # H" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -143) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (#("o" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# Ho") help-echo "LINK: # Ho" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -144) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (#("w" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How") help-echo "LINK: # How" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -145) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (#("-" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "# How-") help-echo "LINK: # How-" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -146) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) 147 (146 . 147) (145 . 145) (145 . 146) (#("w" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How") help-echo "LINK: # How" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -145) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (#(" " 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How ") help-echo "LINK: # How " isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -146) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (#("t" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How t") help-echo "LINK: # How t" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -147) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (#("h" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How th") help-echo "LINK: # How th" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -148) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (#("e" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How the") help-echo "LINK: # How the" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -149) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (#(" " 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How the ") help-echo "LINK: # How the " isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -150) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#("i" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# How the i") help-echo "LINK: # How the i" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -151) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (#("n" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "# How the in") help-echo "LINK: # How the in" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -152) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) 153 (143 . 143) (143 . 153) (#("G" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "# G") help-echo "LINK: # G" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -143) (undo-tree-id3095 . -1) 144 (141 . 144) (140 . 142) (139 . 141) (137 . 139) (135 . 137) (nil isearch-open-invisible org-fold-core--isearch-show 134 . 135) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 134 . 135) (nil font-lock-multiline t 134 . 135) (nil face org-link 134 . 135) (nil fontified t 134 . 135) (nil line-prefix "" 134 . 135) (nil wrap-prefix #("  " 0 2 (face org-indent)) 134 . 135) (nil ws-butler-chg chg 134 . 135) (134 . 135) 131) nil (26267 18605 884391 440000) 0 nil])
([nil nil ((#(" " 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "# how-the-internet-works") help-echo "LINK: # how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . 142) (undo-tree-id3056 . -1)) nil (26267 18605 884370 811000) 0 nil])
([nil nil ((164 . 166)) nil (26267 18605 884370 40000) 0 nil])
([nil nil ((167 . 169)) nil (26267 18605 884369 499000) 0 nil])
([nil nil ((#("[]" 0 2 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . 164) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) 165) nil (26267 18605 884368 868000) 0 nil])
([nil nil ((179 . 188) (172 . 172) (172 . 179) (#(" " 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix "" fontified t)) . -172) (undo-tree-id3051 . -1) 173 (166 . 173)) nil (26267 18605 884366 433000) 0 nil])
([nil nil ((102 . 110) (95 . 102) (91 . 91) (91 . 95) (90 . 91) 90) nil (26267 18605 884364 529000) 0 nil])
([nil nil ((#("entnt" 0 5 (face org-level-1 ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 105) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -2) (undo-tree-id2915 . -2) (undo-tree-id2916 . -3) (undo-tree-id2917 . -3) (undo-tree-id2918 . -3) (undo-tree-id2919 . -3) (undo-tree-id2920 . -3) (undo-tree-id2921 . -3) (undo-tree-id2922 . -3) (undo-tree-id2923 . -3) (undo-tree-id2924 . -3) (undo-tree-id2925 . -3) (undo-tree-id2926 . -3) (undo-tree-id2927 . -3) (undo-tree-id2928 . -3) (undo-tree-id2929 . -3) (undo-tree-id2930 . -3) (undo-tree-id2931 . -3) (undo-tree-id2932 . -3) (undo-tree-id2933 . -3) (undo-tree-id2934 . -3) (undo-tree-id2935 . -3) (undo-tree-id2936 . -3) (undo-tree-id2937 . -3) (undo-tree-id2938 . -3) (undo-tree-id2939 . -3) (undo-tree-id2940 . -3) (undo-tree-id2941 . -3) (undo-tree-id2942 . -3) (undo-tree-id2943 . -3) (undo-tree-id2944 . -3) (undo-tree-id2945 . -3) (undo-tree-id2946 . -4) (undo-tree-id2947 . -4) (undo-tree-id2948 . -4) (undo-tree-id2949 . -4) (undo-tree-id2950 . -4) (undo-tree-id2951 . -5) (undo-tree-id2952 . -5) (undo-tree-id2953 . -5) (undo-tree-id2954 . -5) (undo-tree-id2955 . -5) (undo-tree-id2956 . -5) (undo-tree-id2957 . -5) (undo-tree-id2958 . -5) (undo-tree-id2959 . -5) (undo-tree-id2960 . -5) (undo-tree-id2961 . -5) (undo-tree-id2962 . -5) (undo-tree-id2963 . -5) (undo-tree-id2964 . -5) (undo-tree-id2965 . -5) (undo-tree-id2966 . -5) (undo-tree-id2967 . -5) (undo-tree-id2968 . -5) (undo-tree-id2969 . -5) (undo-tree-id2970 . -5) (undo-tree-id2971 . -5) (undo-tree-id2972 . -5) (undo-tree-id2973 . -5) (undo-tree-id2974 . -5) (undo-tree-id2975 . -5) (undo-tree-id2976 . -5) (undo-tree-id2977 . -5) (undo-tree-id2978 . -5) (undo-tree-id2979 . -5) (undo-tree-id2980 . -5) (undo-tree-id2981 . -4) (undo-tree-id2982 . -4) (undo-tree-id2983 . -4) (undo-tree-id2984 . -4) (undo-tree-id2985 . -4) (undo-tree-id2986 . -4) (undo-tree-id2987 . -4) (undo-tree-id2988 . -4) (undo-tree-id2989 . -4) (undo-tree-id2990 . -4) (undo-tree-id2991 . -4) (undo-tree-id2992 . -4) (undo-tree-id2993 . -4) (undo-tree-id2994 . -4) (undo-tree-id2995 . -4) (undo-tree-id2996 . -4) (undo-tree-id2997 . -4) (undo-tree-id2998 . -3) (undo-tree-id2999 . -3) (undo-tree-id3000 . -3) (undo-tree-id3001 . -3) (undo-tree-id3002 . -3) (undo-tree-id3003 . -3) (undo-tree-id3004 . -3) (undo-tree-id3005 . -3) (undo-tree-id3006 . -3) (undo-tree-id3007 . -3) (undo-tree-id3008 . -2) (undo-tree-id3009 . -2) (undo-tree-id3010 . -2) (undo-tree-id3011 . -2) (undo-tree-id3012 . -2) (undo-tree-id3013 . -2) (undo-tree-id3014 . -2) (undo-tree-id3015 . -2) (undo-tree-id3016 . -2) (undo-tree-id3017 . -2) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -4) (undo-tree-id3034 . -4) (undo-tree-id3035 . -4) (undo-tree-id3036 . -4) (undo-tree-id3037 . -4) (undo-tree-id3038 . -4) (undo-tree-id3039 . -4) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) (undo-tree-id3042 . -4) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) (undo-tree-id3045 . -4) (undo-tree-id3046 . -4) (undo-tree-id3047 . -4) (undo-tree-id3048 . -4) (undo-tree-id3049 . -4) (undo-tree-id3050 . -5) 109) nil (26267 18605 884360 251000) 0 nil])
([nil nil ((105 . 109)) nil (26267 18605 884302 533000) 0 nil])
([nil nil ((#("  " 0 2 (ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -154) (undo-tree-id2910 . -2) 156 (154 . 156) (nil isearch-open-invisible org-fold-core--isearch-show 153 . 154) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 153 . 154) (nil font-lock-multiline t 153 . 154) (nil face org-link 153 . 154) (nil fontified t 153 . 154) (nil line-prefix #("  " 0 2 (face org-indent)) 153 . 154) (nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) 153 . 154) (nil ws-butler-chg chg 153 . 154) (153 . 154) 149) nil (26267 18605 884301 651000) 0 nil])
([nil nil ((#("
" 0 1 (face org-link font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 153) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) 153 . 154) (nil fontified nil 153 . 154) (nil face nil 153 . 154) (nil font-lock-multiline nil 153 . 154) (nil isearch-open-invisible-temporary nil 153 . 154) (nil isearch-open-invisible nil 153 . 154) (#("  " 0 2 (ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 154) (undo-tree-id2909 . -2) (nil ws-butler-chg delete 156 . 157) (154 . 156)) nil (26267 18605 884298 996000) 0 nil])
([nil nil ((#("[" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link font-lock-multiline t htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -151) (undo-tree-id2905 . -1) (#("]" 0 1 (face org-link font-lock-multiline t htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 152) (151 . 153)) nil (26267 18605 884295 921000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -112) (undo-tree-id2904 . -1) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 113) (112 . 114)) nil (26267 18605 884294 849000) 0 nil])
([nil nil ((161 . 163) (160 . 162) (159 . 161) (158 . 160)) nil (26267 18605 884293 366000) 0 nil])
([nil nil ((#("[]" 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 158) (undo-tree-id2891 . 1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (#("[]" 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 159) (undo-tree-id2895 . 1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (#("[]" 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 160) (undo-tree-id2899 . 1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (#("[]" 0 2 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 161) (undo-tree-id2903 . 1)) nil (26267 18605 884291 953000) 0 nil])
([nil nil ((#("How the internet works]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) ws-butler-chg chg htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 4 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 4 5 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 5 6 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 6 7 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 7 8 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 8 9 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 9 10 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 10 11 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 11 12 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 12 13 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 13 14 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 14 15 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 15 16 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 16 17 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 17 18 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 18 19 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 19 20 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 20 21 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 21 22 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 22 23 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg delete htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 185) (undo-tree-id2886 . -22) (undo-tree-id2887 . -21) (undo-tree-id2888 . -22) (undo-tree-id2889 . -22) (undo-tree-id2890 . -14)) nil (26267 18605 884286 192000) 0 nil])
([nil nil ((#("#how-the-internet-works" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg delete wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 4 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 4 5 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 5 6 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 6 7 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 7 8 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 8 9 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 9 10 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 10 11 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 11 12 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 12 13 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 13 14 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 14 15 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 15 16 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 16 17 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 17 18 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 18 19 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 19 20 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 20 21 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 21 22 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 22 23 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-internet-works") help-echo "LINK: #how-the-internet-works" ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 160) (undo-tree-id2751 . -22) (undo-tree-id2752 . -22) (undo-tree-id2753 . -22) (undo-tree-id2754 . -1) (undo-tree-id2755 . -23) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -2) (undo-tree-id2759 . -2) (undo-tree-id2760 . -2) (undo-tree-id2761 . -2) (undo-tree-id2762 . -2) (undo-tree-id2763 . -3) (undo-tree-id2764 . -3) (undo-tree-id2765 . -3) (undo-tree-id2766 . -3) (undo-tree-id2767 . -3) (undo-tree-id2768 . -4) (undo-tree-id2769 . -4) (undo-tree-id2770 . -4) (undo-tree-id2771 . -4) (undo-tree-id2772 . -4) (undo-tree-id2773 . -5) (undo-tree-id2774 . -5) (undo-tree-id2775 . -5) (undo-tree-id2776 . -5) (undo-tree-id2777 . -5) (undo-tree-id2778 . -6) (undo-tree-id2779 . -6) (undo-tree-id2780 . -6) (undo-tree-id2781 . -6) (undo-tree-id2782 . -6) (undo-tree-id2783 . -7) (undo-tree-id2784 . -7) (undo-tree-id2785 . -7) (undo-tree-id2786 . -7) (undo-tree-id2787 . -7) (undo-tree-id2788 . -8) (undo-tree-id2789 . -8) (undo-tree-id2790 . -8) (undo-tree-id2791 . -8) (undo-tree-id2792 . -8) (undo-tree-id2793 . -9) (undo-tree-id2794 . -9) (undo-tree-id2795 . -9) (undo-tree-id2796 . -9) (undo-tree-id2797 . -9) (undo-tree-id2798 . -10) (undo-tree-id2799 . -10) (undo-tree-id2800 . -10) (undo-tree-id2801 . -10) (undo-tree-id2802 . -10) (undo-tree-id2803 . -11) (undo-tree-id2804 . -11) (undo-tree-id2805 . -11) (undo-tree-id2806 . -11) (undo-tree-id2807 . -11) (undo-tree-id2808 . -12) (undo-tree-id2809 . -12) (undo-tree-id2810 . -12) (undo-tree-id2811 . -12) (undo-tree-id2812 . -12) (undo-tree-id2813 . -13) (undo-tree-id2814 . -13) (undo-tree-id2815 . -13) (undo-tree-id2816 . -13) (undo-tree-id2817 . -13) (undo-tree-id2818 . -14) (undo-tree-id2819 . -14) (undo-tree-id2820 . -14) (undo-tree-id2821 . -14) (undo-tree-id2822 . -14) (undo-tree-id2823 . -15) (undo-tree-id2824 . -15) (undo-tree-id2825 . -15) (undo-tree-id2826 . -15) (undo-tree-id2827 . -15) (undo-tree-id2828 . -16) (undo-tree-id2829 . -16) (undo-tree-id2830 . -16) (undo-tree-id2831 . -16) (undo-tree-id2832 . -16) (undo-tree-id2833 . -17) (undo-tree-id2834 . -17) (undo-tree-id2835 . -17) (undo-tree-id2836 . -17) (undo-tree-id2837 . -17) (undo-tree-id2838 . -18) (undo-tree-id2839 . -18) (undo-tree-id2840 . -18) (undo-tree-id2841 . -18) (undo-tree-id2842 . -18) (undo-tree-id2843 . -19) (undo-tree-id2844 . -19) (undo-tree-id2845 . -19) (undo-tree-id2846 . -19) (undo-tree-id2847 . -19) (undo-tree-id2848 . -20) (undo-tree-id2849 . -20) (undo-tree-id2850 . -20) (undo-tree-id2851 . -20) (undo-tree-id2852 . -20) (undo-tree-id2853 . -21) (undo-tree-id2854 . -21) (undo-tree-id2855 . -21) (undo-tree-id2856 . -21) (undo-tree-id2857 . -21) (undo-tree-id2858 . -22) (undo-tree-id2859 . -22) (undo-tree-id2860 . -22) (undo-tree-id2861 . -22) (undo-tree-id2862 . -22) (undo-tree-id2863 . -22) (undo-tree-id2864 . -22) (undo-tree-id2865 . -22) (undo-tree-id2866 . -22) (undo-tree-id2867 . -22) (undo-tree-id2868 . -22) (undo-tree-id2869 . -22) (undo-tree-id2870 . -22) (undo-tree-id2871 . -22) (undo-tree-id2872 . -22) (undo-tree-id2873 . -22) (undo-tree-id2874 . -22) (undo-tree-id2875 . -22) (undo-tree-id2876 . -22) (undo-tree-id2877 . -22) (undo-tree-id2878 . -22) (undo-tree-id2879 . -22) (undo-tree-id2880 . -22) (undo-tree-id2881 . -22) (undo-tree-id2882 . -22) (undo-tree-id2883 . -22) (undo-tree-id2884 . -22) (undo-tree-id2885 . -23) 182) nil (26267 18605 884280 512000) 0 nil])
([nil nil ((166 . 182) (#(" " 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -166) (undo-tree-id2744 . -1) (#("e" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -167) (undo-tree-id2745 . -1) (#("i" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -168) (undo-tree-id2746 . -1) (#("n" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -169) (undo-tree-id2747 . -1) 170 (166 . 170) (#(" " 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -166) (undo-tree-id2748 . -1) (#("e" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -167) (undo-tree-id2749 . -1) 168 (161 . 168) (#("w" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -161) (undo-tree-id2750 . -1) 162 (160 . 162)) nil (26267 18605 884223 405000) 0 nil])
([nil nil ((nil rear-nonsticky nil 206 . 207) (nil fontified nil 185 . 207) (nil isearch-open-invisible org-fold-core--isearch-show 185 . 207) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 185 . 207) (nil ws-butler-chg delete 185 . 207) (nil fontified t 185 . 207) (nil line-prefix #("  " 0 2 (face org-indent)) 185 . 207) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 185 . 207) (185 . 207) 184) nil (26267 18605 884218 766000) 0 nil])
([nil nil ((#("How the internet works" 0 21 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil ws-butler-chg delete wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 21 22 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky nil fontified nil ws-butler-chg delete wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 185) (undo-tree-id2740 . -21) (undo-tree-id2741 . -21) (undo-tree-id2742 . -21) (undo-tree-id2743 . -21) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 206 . 207) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 185 . 206) (nil fontified nil 206 . 207) (nil fontified nil 185 . 206) (nil ws-butler-chg chg 206 . 207) (nil ws-butler-chg chg 185 . 206) (nil isearch-open-invisible-temporary nil 206 . 207) (nil isearch-open-invisible-temporary nil 185 . 206) (nil isearch-open-invisible nil 206 . 207) (nil isearch-open-invisible nil 185 . 206) (nil rear-nonsticky t 206 . 207)) nil (26267 18605 884217 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 184 . 206) (nil fontified t 184 . 206) (nil line-prefix #("  " 0 2 (face org-indent)) 184 . 206) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 184 . 206) (nil isearch-open-invisible org-fold-core--isearch-show 184 . 206) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 184 . 206) (nil ws-butler-chg chg 184 . 206) (184 . 206) 183) nil (26267 18605 884214 57000) 0 nil])
([nil nil ((nil isearch-open-invisible org-fold-core--isearch-show 207 . 208) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 207 . 208) (nil fontified nil 207 . 208) (nil line-prefix #("  " 0 2 (face org-indent)) 207 . 208) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 207 . 208) (nil ws-butler-chg delete 207 . 208) (207 . 208) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -207) (207 . 208) (#(";" 0 1 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . -207) (undo-tree-id2739 . -1) 208 (207 . 208)) nil (26267 18605 884212 534000) 0 nil])
([nil nil ((#("[[#how-the-web-works][How the web works]]
" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg delete htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 21 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 21 22 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 22 35 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 35 36 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg chg htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 36 37 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link ws-butler-chg delete htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 37 38 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 38 39 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 39 40 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg delete rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 40 41 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 41 42 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 112) (undo-tree-id2723 . -41) (undo-tree-id2724 . -38) (undo-tree-id2725 . -38) (undo-tree-id2726 . -37) (undo-tree-id2727 . -35) (undo-tree-id2728 . -35) (undo-tree-id2729 . -38) (undo-tree-id2730 . -41) (undo-tree-id2731 . -41) (undo-tree-id2732 . -22) (undo-tree-id2733 . -37) (undo-tree-id2734 . -41) (undo-tree-id2735 . -41) (undo-tree-id2736 . -22) (undo-tree-id2737 . -22) (undo-tree-id2738 . -41) 153) nil (26267 18605 884210 330000) 0 nil])
([nil nil ((nil ws-butler-chg delete 154 . 155) (112 . 154)) nil (26267 18605 884202 816000) 0 nil])
([nil nil ((#("]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg delete rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 151)) nil (26267 18605 884202 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 130 . 131) (nil fontified nil 114 . 131) (114 . 131) (#("#how-the-web-works" 0 18 (htmlize-link (:uri "#how-the-web-works") help-echo "LINK: #how-the-web-works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 114) (undo-tree-id2720 . -18) (undo-tree-id2721 . -17) (undo-tree-id2722 . -17)) nil (26267 18605 884201 493000) 0 nil])
([nil nil ((nil isearch-open-invisible org-fold-core--isearch-show 151 . 152) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 151 . 152) (nil fontified nil 151 . 152) (nil line-prefix #("  " 0 2 (face org-indent)) 151 . 152) (nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) 151 . 152) (nil ws-butler-chg delete 151 . 152) (151 . 152) (#("]" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg)) . -151) (151 . 152)) nil (26267 18605 884199 379000) 0 nil])
([nil nil ((210 . 214) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -210) (undo-tree-id2716 . -1) (#("-" 0 1 (ws-butler-chg chg wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -211) (undo-tree-id2717 . -1) 212 (211 . 212) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -211) (undo-tree-id2718 . -1) (#("-" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -212) (undo-tree-id2719 . -1) 213 (212 . 213) (208 . 212) (nil isearch-open-invisible org-fold-core--isearch-show 207 . 208) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 207 . 208) (nil font-lock-multiline t 207 . 208) (nil face org-link 207 . 208) (nil fontified t 207 . 208) (nil line-prefix #("  " 0 2 (face org-indent)) 207 . 208) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 207 . 208) (nil ws-butler-chg chg 207 . 208) (207 . 208) 156) nil (26267 18605 884197 436000) 0 nil])
([nil nil ((nil rear-nonsticky nil 252 . 253) (nil fontified nil 213 . 253) (213 . 253) 212) nil (26267 18605 884193 879000) 0 nil])
([nil nil ((254 . 256)) nil (26267 18605 884193 268000) 0 nil])
([nil nil ((nil rear-nonsticky nil 294 . 295) (nil fontified nil 255 . 295) (255 . 295) 254) nil (26267 18605 884192 707000) 0 nil])
([nil nil ((296 . 297) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -296) (296 . 297)) nil (26267 18605 884191 935000) 0 nil])
([nil nil ((212 . 213)) nil (26267 18605 884191 324000) 0 nil])
([nil nil ((3149 . 3151) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3149) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3150) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3151) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) 3152 (3148 . 3152) 3148) nil (26267 18605 884187 367000) 0 nil])
([nil nil ((#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3147) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) 3148 (#("
" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3148) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) 3149) nil (26267 18605 884130 79000) 0 nil])
([nil nil ((3148 . 3149) (nil ws-butler-chg delete 3148 . 3149) (3147 . 3148)) nil (26267 18605 884047 845000) 0 nil])
([nil nil ((#("
   " 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 3148) (undo-tree-id2324 . -1) (undo-tree-id2325 . -4) (undo-tree-id2326 . -4) (undo-tree-id2327 . -4) (undo-tree-id2328 . -4) (undo-tree-id2329 . -4) (undo-tree-id2330 . -4) (undo-tree-id2331 . -4) (undo-tree-id2332 . -4) (undo-tree-id2333 . -4) (undo-tree-id2334 . -4) (undo-tree-id2335 . -4) (undo-tree-id2336 . -4) (undo-tree-id2337 . -4) (undo-tree-id2338 . -4) (undo-tree-id2339 . -4) (undo-tree-id2340 . -4) (undo-tree-id2341 . -4) (undo-tree-id2342 . -4) (undo-tree-id2343 . -4) (undo-tree-id2344 . -4) (undo-tree-id2345 . -4) (undo-tree-id2346 . -4) (undo-tree-id2347 . -4) (undo-tree-id2348 . -4) (undo-tree-id2349 . -4) (undo-tree-id2350 . -4) (undo-tree-id2351 . -4) (undo-tree-id2352 . -4) (undo-tree-id2353 . -4) (undo-tree-id2354 . -4) (undo-tree-id2355 . -4) (undo-tree-id2356 . -4) (undo-tree-id2357 . -3) (undo-tree-id2358 . -3) (undo-tree-id2359 . -3) (undo-tree-id2360 . -3) (undo-tree-id2361 . -3) (undo-tree-id2362 . -3) (undo-tree-id2363 . -3) (undo-tree-id2364 . -3) (undo-tree-id2365 . -3) (undo-tree-id2366 . -3) (undo-tree-id2367 . -3) (undo-tree-id2368 . -2) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -2) (undo-tree-id2373 . -2) (undo-tree-id2374 . -2) (undo-tree-id2375 . -2) (undo-tree-id2376 . -2) (undo-tree-id2377 . -2) (undo-tree-id2378 . -2) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -4) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (3149 . 3152) (#("**" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3149) (undo-tree-id2437 . 2)) nil (26267 18605 884043 757000) 0 nil])
([nil nil ((3148 . 3150)) nil (26267 18605 883999 124000) 0 nil])
([nil nil ((3147 . 3150) (#("**" 0 1 (ws-butler-chg delete isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3147) (#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3147) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) 3148) nil (26267 18605 883995 256000) 0 nil])
([nil nil ((nil ws-butler-chg delete 3148 . 3149) (3147 . 3148) (3147 . 3149) (#("
**" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3147) (undo-tree-id2176 . 2) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1)) nil (26267 18605 883937 568000) 0 nil])
([nil nil ((#("**" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3148)) nil (26267 18605 883934 993000) 0 nil])
([nil nil ((3148 . 3153) (#("j" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3148) (undo-tree-id2175 . -1) 3149 (3148 . 3149)) nil (26267 18605 883934 392000) 0 nil])
([nil nil ((#("k" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3156) (undo-tree-id2174 . -1) 3157 (3154 . 3157) (3153 . 3154) 3152) nil (26267 18605 883932 829000) 0 nil])
([nil nil ((#("*" 0 1 (org-emphasis t font-lock-multiline t face (bold) ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3149)) nil (26267 18605 883931 246000) 0 nil])
([nil nil ((#("****
" 0 1 (org-emphasis t font-lock-multiline t face (bold) ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (org-emphasis t font-lock-multiline t face (bold) ws-butler-chg delete isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 4 (org-emphasis t font-lock-multiline t face (bold) ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3148) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . 3) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -4) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) 3149) nil (26267 18605 883930 334000) 0 nil])
([nil nil ((3148 . 3149)) nil (26267 18605 883925 415000) 0 nil])
([nil nil ((#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3147) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (#("
" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3148) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) 3149) nil (26267 18605 883916 528000) 0 nil])
([nil nil ((3148 . 3149) (nil ws-butler-chg delete 3148 . 3149) (3147 . 3148)) nil (26267 18605 883784 430000) 0 nil])
([nil nil ((3147 . 3148) (#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3147) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("
" 0 1 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3148) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) 3149 (#("*" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3149) (undo-tree-id744 . 1) (undo-tree-id745 . 1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (#("*" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3150) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (#("
" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3151) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (#("#" 0 1 (face font-lock-comment-face font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3152) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (#("#" 0 1 (font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3153) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (#("#" 0 1 (font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3154) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (#("#" 0 1 (font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3155) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (#("#" 0 1 (font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3156) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (#("#" 0 1 (font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3157) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (#("#" 0 1 (font-lock-fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3158) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) 3159 (3152 . 3159) (3151 . 3152) 3149) nil (26267 18605 883733 675000) 0 nil])
([nil nil ((3148 . 3150) (t 26267 18605 904001 520000)) nil (26267 19907 415754 128000) 0 nil])
([nil nil ((#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1444)) nil (26267 19907 415753 407000) 0 nil])
([nil nil ((#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1242)) nil (26267 19907 415752 806000) 0 nil])
([nil nil ((#("
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 994)) nil (26267 19907 415752 134000) 0 nil])
([nil nil ((nil ws-butler-chg delete 995 . 996) (994 . 995)) nil (26267 19907 415751 513000) 0 nil])
([nil nil ((nil ws-butler-chg delete 1243 . 1244) (1242 . 1243)) nil (26267 19907 415750 642000) 0 nil])
([nil nil ((nil ws-butler-chg delete 1445 . 1446) (1444 . 1445)) nil (26267 19907 415749 650000) 0 nil])
([nil nil ((#("**" 0 2 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3148) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) 3149) nil (26267 19907 415748 968000) 0 nil])
([nil nil ((3148 . 3150)) nil (26267 19907 415746 744000) 0 nil])
([nil nil ((3150 . 3151) 3149) nil (26267 19907 415746 334000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3277 . 3278) (nil fontified nil 3151 . 3278) (3151 . 3278)) nil (26267 19907 415745 762000) 0 nil])
([nil nil ((#("**" 0 2 (ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3148) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) 3149) nil (26267 19907 415744 891000) 0 nil])
([nil nil ((3149 . 3150) (#("a" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3149)) nil (26267 19907 415742 166000) 0 nil])
([nil nil ((3182 . 3183) (#("h" 0 1 (face org-level-2 ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -3182) (undo-tree-id3399 . -1) 3183 (3182 . 3183) (3180 . 3182) (3178 . 3180) (3168 . 3168) (3168 . 3178) (3155 . 3168) (3154 . 3154) (3154 . 3155) (3148 . 3148) (3148 . 3154)) nil (26267 19907 415740 993000) 0 nil])
([nil nil ((#("   " 0 3 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -3148) (undo-tree-id3398 . -3) 3151 (3147 . 3151) 2993) nil (26267 19907 415738 419000) 0 nil])
([nil nil ((304 . 306) (301 . 305) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -301) (undo-tree-id3396 . -1) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -302) (undo-tree-id3397 . -1) 303 (299 . 303)) nil (26267 19907 415736 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 336 . 337) (nil fontified nil 305 . 337) (305 . 337) 304) nil (26267 19907 415733 890000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -340) (undo-tree-id3395 . -4) 344 (340 . 344) (nil isearch-open-invisible org-fold-core--isearch-show 339 . 340) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 339 . 340) (nil font-lock-multiline t 339 . 340) (nil face org-link 339 . 340) (nil fontified t 339 . 340) (nil line-prefix #("  " 0 2 (face org-indent)) 339 . 340) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 339 . 340) (339 . 340) 299) nil (26267 19907 415732 528000) 0 nil])
([nil nil ((299 . 340) (#("  - [[What are websites and a webpages]]" 0 2 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (face org-superstar-item composition (0 1 [8211]) ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 4 5 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 5 6 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 6 37 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 37 38 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 38 39 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 39 40 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 299) (undo-tree-id3390 . -6) (undo-tree-id3391 . -37) (undo-tree-id3392 . -37) (undo-tree-id3393 . -6) (undo-tree-id3394 . -37)) nil (26267 19907 415729 752000) 0 nil])
([nil nil ((nil ws-butler-chg delete 339 . 340) (299 . 339) (#("
  - [[What are websites and a webpages]]" 0 1 (ws-butler-chg chg wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 3 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 4 (face org-superstar-item composition (0 1 [8211]) ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 4 5 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 5 6 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 6 7 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 7 38 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 38 39 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 40 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 40 41 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg chg htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 299) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1)) nil (26267 19907 415725 364000) 0 nil])
([nil nil ((#("What is web server and how does it works" 0 39 (face org-link font-lock-multiline t htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 40 (face org-link font-lock-multiline t htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 256) (undo-tree-id3383 . -39) (undo-tree-id3384 . -39) (undo-tree-id3385 . -39) (undo-tree-id3386 . -39) 295) nil (26267 19907 415722 569000) 0 nil])
([nil nil ((#("[]" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (ws-butler-chg delete htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 255) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) 256) nil (26267 19907 415719 583000) 0 nil])
([nil nil ((#("What is web server and how does it works]]" 0 39 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 40 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 40 41 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 41 42 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link ws-butler-chg delete htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 214) (undo-tree-id3376 . -41) (undo-tree-id3377 . -41) (undo-tree-id3378 . -41)) nil (26267 19907 415716 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 254 . 255) (nil fontified nil 213 . 255) (213 . 255) 212) nil (26267 19907 415714 73000) 0 nil])
([nil nil ((#("][" 0 1 (rear-nonsticky t fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "What is web server and how does it works") help-echo "LINK: What is web server and how does it works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 254) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -2) (undo-tree-id3375 . -1) 255) nil (26267 19907 415712 640000) 0 nil])
([nil nil ((#("What are websites and a webpages]" 0 31 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 31 32 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 32 33 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "What are websites and a webpages") help-echo "LINK: What are websites and a webpages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 261) (undo-tree-id3366 . -32) (undo-tree-id3367 . -32) (undo-tree-id3368 . -32) (undo-tree-id3369 . -31) (undo-tree-id3370 . -31)) nil (26267 19907 415708 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 294 . 295) (nil fontified nil 262 . 295) (nil isearch-open-invisible org-fold-core--isearch-show 262 . 295) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 262 . 295) (nil ws-butler-chg delete 262 . 295) (nil fontified t 262 . 295) (nil line-prefix #("  " 0 2 (face org-indent)) 262 . 295) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 262 . 295) (262 . 295) 261) nil (26267 19907 415703 112000) 0 nil])
([nil nil ((#("What are websites and a webpages]" 0 32 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil ws-butler-chg delete wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 32 33 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky nil fontified nil ws-butler-chg delete wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 262) (undo-tree-id3362 . -32) (undo-tree-id3363 . -32) (undo-tree-id3364 . -32) (undo-tree-id3365 . -32) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 294 . 295) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 262 . 294) (nil fontified nil 294 . 295) (nil fontified nil 262 . 294) (nil ws-butler-chg chg 294 . 295) (nil ws-butler-chg chg 262 . 294) (nil isearch-open-invisible-temporary nil 294 . 295) (nil isearch-open-invisible-temporary nil 262 . 294) (nil isearch-open-invisible nil 294 . 295) (nil isearch-open-invisible nil 262 . 294) (nil rear-nonsticky t 294 . 295)) nil (26267 19907 415700 748000) 0 nil])
([nil nil ((nil ws-butler-chg delete 294 . 295) (261 . 294)) nil (26267 19907 415697 321000) 0 nil])
([nil nil ((212 . 214)) nil (26267 19907 415696 750000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 213) (undo-tree-id3361 . 1)) nil (26267 19907 415695 859000) 0 nil])
([nil nil ((255 . 256) (#("]" 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -255) (255 . 256)) nil (26267 19907 415694 807000) 0 nil])
([nil nil ((#("How the internet works" 0 21 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the internet works") help-echo "LINK: How the internet works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 21 22 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the internet works") help-echo "LINK: How the internet works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 183) (undo-tree-id3357 . -21) (undo-tree-id3358 . -21) (undo-tree-id3359 . -21) (undo-tree-id3360 . -21) 204) nil (26267 19907 415693 965000) 0 nil])
([nil nil ((#("[]" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the internet works") help-echo "LINK: How the internet works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (ws-butler-chg delete htmlize-link (:uri "How the internet works") help-echo "LINK: How the internet works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 182) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -2) (undo-tree-id3356 . -1) 183) nil (26267 19907 415691 581000) 0 nil])
([nil nil ((#("[[How the web works][How the web works" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 18 (face org-link font-lock-multiline t htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 18 19 (face org-link font-lock-multiline t htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 19 20 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 20 21 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 21 34 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 34 35 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 35 36 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 36 37 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 37 38 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 112) (undo-tree-id3345 . -37) (undo-tree-id3346 . -37) (undo-tree-id3347 . -37) (undo-tree-id3348 . -37) (undo-tree-id3349 . -21) (undo-tree-id3350 . -21) (undo-tree-id3351 . -37) 149) nil (26267 19907 415688 385000) 0 nil])
([nil nil ((115 . 117) (114 . 116)) nil (26267 19907 415683 335000) 0 nil])
([nil nil ((nil rear-nonsticky nil 153 . 154) (nil fontified nil 116 . 154) (116 . 154) 115) nil (26267 19907 415682 764000) 0 nil])
([nil nil ((#("]]" 0 1 (ws-butler-chg delete htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 112) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1)) nil (26267 19907 415681 922000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg delete wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 112)) nil (26267 19907 415679 889000) 0 nil])
([nil nil ((#("[How the web works]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 17 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 17 18 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 18 19 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 133) (undo-tree-id3337 . 1) (undo-tree-id3338 . -18) (undo-tree-id3339 . -18) (undo-tree-id3340 . -18) 112) nil (26267 19907 415679 137000) 0 nil])
([nil nil ((nil line-prefix #("  " 0 2 (face org-indent)) 132 . 133) (nil wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) 132 . 133) (nil ws-butler-chg chg 132 . 133) (nil fontified nil 132 . 133) (nil isearch-open-invisible org-fold-core--isearch-show 132 . 133) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 132 . 133) (nil font-lock-multiline t 132 . 133) (nil face org-link 132 . 133) (132 . 133) (#("]" 0 1 (face org-link font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -132) (132 . 133)) nil (26267 19907 415676 402000) 0 nil])
([nil nil ((#("[[[How the web works]" 0 1 (ws-butler-chg delete wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 2 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 3 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 3 19 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 19 20 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 20 21 (face org-link font-lock-multiline t htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 112) (undo-tree-id3334 . -20) (undo-tree-id3335 . -20) (undo-tree-id3336 . -20)) nil (26267 19907 415674 929000) 0 nil])
([nil nil ((#("]]" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t ws-butler-chg delete wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 2 (ws-butler-chg delete htmlize-link (:uri "How the web works") help-echo "LINK: How the web works" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 112) (undo-tree-id3329 . 1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) 113) nil (26267 19907 415672 805000) 0 nil])
([nil nil ((129 . 131) (125 . 125) (125 . 129) (114 . 114) (114 . 125) (113 . 115) (112 . 114)) nil (26267 19907 415669 118000) 0 nil])
([nil nil ((#("19" 0 2 (wrap-prefix "" line-prefix "" face org-document-info font-lock-fontified t fontified t)) . 87) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) 88) nil (26267 19907 415667 575000) 0 nil])
([nil nil ((88 . 89) (87 . 87) (87 . 88)) nil (26267 19907 415663 237000) 0 nil])
([nil nil ((3310 . 3316) (3289 . 3310) (3286 . 3289) (3276 . 3276) (3276 . 3286) (3270 . 3270) (3270 . 3276) (3269 . 3270) (3268 . 3269) 3158) nil (26267 19907 415661 915000) 0 nil])
([nil nil ((3316 . 3317)) nil (26267 19907 415660 342000) 0 nil])
([nil nil ((3140 . 3141) (#(">" 0 1 (face org-level-2 ws-butler-chg chg isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -3140) (3140 . 3141)) nil (26267 19907 415659 460000) 0 nil])
([nil nil ((#(">" 0 1 (face org-level-2 ws-butler-chg chg wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 3140)) nil (26267 19907 415658 458000) 0 nil])
([nil nil ((3140 . 3141)) nil (26267 19907 415657 697000) 0 nil])
([nil nil ((1613 . 1614)) nil (26267 19907 415657 266000) 0 nil])
([nil nil ((301 . 302)) nil (26267 19907 415656 775000) 0 nil])
([nil nil ((3320 . 3321) 3298) nil (26267 19907 415656 144000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3321 . 3322) (nil fontified nil 3321 . 3322) (3321 . 3322)) nil (26267 19907 415655 443000) 0 nil])
([nil nil ((#(">" 0 1 (rear-nonsticky t fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3321)) nil (26267 19907 415654 521000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4875 . 4876) (nil fontified nil 4782 . 4876) (nil fontified nil 4696 . 4782) (nil fontified nil 4695 . 4696) (nil fontified nil 4663 . 4695) (nil fontified nil 4662 . 4663) (nil fontified nil 4563 . 4662) (nil fontified nil 4469 . 4563) (nil fontified nil 4468 . 4469) (nil fontified nil 4418 . 4468) (nil fontified nil 4417 . 4418) (nil fontified nil 4316 . 4417) (nil fontified nil 4188 . 4316) (nil fontified nil 4077 . 4188) (nil fontified nil 4076 . 4077) (nil fontified nil 4053 . 4076) (nil fontified nil 4052 . 4053) (nil fontified nil 3978 . 4052) (nil fontified nil 3908 . 3978) (nil fontified nil 3805 . 3908) (nil fontified nil 3804 . 3805) (nil fontified nil 3772 . 3804) (nil fontified nil 3771 . 3772) (nil fontified nil 3674 . 3771) (nil fontified nil 3589 . 3674) (nil fontified nil 3588 . 3589) (nil fontified nil 3559 . 3588) (nil fontified nil 3558 . 3559) (nil fontified nil 3440 . 3558) (nil fontified nil 3350 . 3440) (nil fontified nil 3349 . 3350) (nil fontified nil 3322 . 3349) (nil fontified nil 3321 . 3322) (3321 . 4876)) nil (26267 19907 415653 138000) 0 nil])
([nil nil ((3326 . 3327) (#("/" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3326) (undo-tree-id3324 . -1) 3327 (3325 . 3327)) nil (26267 19907 415649 281000) 0 nil])
([nil nil ((3566 . 3567) (#("/" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3566) (undo-tree-id3323 . -1) 3567 (3565 . 3567)) nil (26267 19907 415647 398000) 0 nil])
([nil nil ((3780 . 3782) (#("4" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3780) (undo-tree-id3322 . -1) 3781 (3780 . 3781)) nil (26267 19907 415646 45000) 0 nil])
([nil nil ((3782 . 3783)) nil (26267 19907 415644 833000) 0 nil])
([nil nil ((3567 . 3568)) nil (26267 19907 415644 492000) 0 nil])
([nil nil ((4065 . 4067)) nil (26267 19907 415644 41000) 0 nil])
([nil nil ((4067 . 4068)) nil (26267 19907 415643 711000) 0 nil])
([nil nil ((4433 . 4436)) nil (26267 19907 415643 270000) 0 nil])
([nil nil ((4681 . 4684)) nil (26267 19907 415642 919000) 0 nil])
([nil nil ((4681 . 4682) (#("5" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4681)) nil (26267 19907 415642 308000) 0 nil])
([nil nil ((4779 . 4781) (4694 . 4696) (#(" " 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4661) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (4658 . 4661) (4560 . 4562) (4467 . 4469) (#(" " 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4416) (4413 . 4416) (4313 . 4315) (4186 . 4188) (4076 . 4078) (#(" " 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4052) (4049 . 4052) (3976 . 3978) (3907 . 3909) (3805 . 3807) (#(" " 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3772) (3769 . 3772) (3673 . 3675) (3589 . 3591) (#(" " 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3559) (3556 . 3559) (3439 . 3441) (3350 . 3352) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4743) (undo-tree-id3318 . -4) (undo-tree-id3319 . -4) (4742 . 4743) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4660) (4659 . 4660) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4627) (undo-tree-id3320 . -4) (undo-tree-id3321 . -4) (4626 . 4627) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4530) (4529 . 4530) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4439) (4438 . 4439) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4388) (4387 . 4388) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4289) (4288 . 4289) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4164) (4163 . 4164) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4056) (4055 . 4056) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4032) (4031 . 4032) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3960) (3959 . 3960) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3893) (3892 . 3893) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3793) (3792 . 3793) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3760) (3759 . 3760) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3665) (3664 . 3665) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3583) (3582 . 3583) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3553) (3552 . 3553) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3437) (3436 . 3437) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3350) (3349 . 3350) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3322) 3326) nil (26267 19907 415638 501000) 0 nil])
([nil nil ((3352 . 3354)) nil (26267 19907 415628 622000) 0 nil])
([nil nil ((3443 . 3445)) nil (26267 19907 415628 221000) 0 nil])
([nil nil ((3592 . 3593)) nil (26267 19907 415627 771000) 0 nil])
([nil nil ((3677 . 3678)) nil (26267 19907 415627 400000) 0 nil])
([nil nil ((#("-" 0 1 (face org-superstar-item composition (0 1 [8211]) fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3442) (#("-" 0 1 (face org-superstar-item composition (0 1 [8211]) fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3352)) nil (26267 19907 415626 749000) 0 nil])
([nil nil ((apply -1 3349 3558 undo--wrap-and-run-primitive-undo 3349 3558 ((3442 . 3443))) (3351 . 3352)) nil (26267 19907 415625 456000) 0 nil])
([nil nil ((#("   " 0 3 (fontified nil ws-butler-chg chg wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3566) (3562 . 3566) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3444) (undo-tree-id3310 . -2) (undo-tree-id3311 . -2) (undo-tree-id3312 . -2) (undo-tree-id3313 . -2) (3441 . 3444) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3352) (undo-tree-id3314 . -2) (undo-tree-id3315 . -2) (3349 . 3352) 3442) nil (26267 19907 415624 244000) 0 nil])
([nil nil ((4811 . 4816) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4811) (undo-tree-id3307 . -2) (undo-tree-id3308 . -2) (undo-tree-id3309 . -2) (4724 . 4729) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4724) (#("   " 0 3 (fontified nil ws-butler-chg chg wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4692) (4687 . 4692) (4586 . 4591) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4586) (4491 . 4496) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4491) (#("   " 0 3 (fontified nil ws-butler-chg chg wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4441) (4436 . 4441) (4333 . 4338) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4333) (4204 . 4209) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4204) (4092 . 4097) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4092) (#("   " 0 3 (fontified nil ws-butler-chg chg wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4069) (4064 . 4069) (3988 . 3993) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3988) (3917 . 3922) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3917) (3813 . 3818) (#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3813) (#("   " 0 3 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3781) (3779 . 3781) (#("    " 0 4 (fontified nil ws-butler-chg chg wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3567) (3562 . 3567) 4789) nil (26267 19907 415618 82000) 0 nil])
([nil nil ((3346 . 3347) (#("?" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3346)) nil (26267 19907 415611 79000) 0 nil])
([nil nil ((nil ws-butler-chg delete 3347 . 3348) (3346 . 3347) (#(":" 0 1 (ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3346)) nil (26267 19907 415610 148000) 0 nil])
([nil nil ((#("     " 0 5 (fontified nil ws-butler-chg chg wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3562) (nil ws-butler-chg delete 3571 . 3572) (3567 . 3571) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3779) (nil ws-butler-chg delete 3784 . 3785) (3781 . 3784) (nil ws-butler-chg delete 3816 . 3817) (3813 . 3816) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3813) (nil ws-butler-chg delete 3920 . 3921) (3917 . 3920) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3917) (nil ws-butler-chg delete 3991 . 3992) (3988 . 3991) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3988) (#("     " 0 5 (fontified nil ws-butler-chg chg wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4064) (nil ws-butler-chg delete 4072 . 4073) (4069 . 4072) (nil ws-butler-chg delete 4095 . 4096) (4092 . 4095) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4092) (nil ws-butler-chg delete 4207 . 4208) (4204 . 4207) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4204) (nil ws-butler-chg delete 4336 . 4337) (4333 . 4336) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4333) (#("     " 0 5 (fontified nil ws-butler-chg chg wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4436) (nil ws-butler-chg delete 4444 . 4445) (4441 . 4444) (nil ws-butler-chg delete 4494 . 4495) (4491 . 4494) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4491) (nil ws-butler-chg delete 4589 . 4590) (4586 . 4589) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4586) (#("     " 0 5 (fontified nil ws-butler-chg chg wrap-prefix #("               " 0 4 (face org-indent) 4 15 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4687) (nil ws-butler-chg delete 4695 . 4696) (4692 . 4695) (nil ws-butler-chg delete 4727 . 4728) (4724 . 4727) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4724) (nil ws-butler-chg delete 4814 . 4815) (4811 . 4814) (#("     " 0 5 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4811)) nil (26267 19907 415606 400000) 0 nil])
([nil nil ((#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3679) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3595)) nil (26267 19907 415601 131000) 0 nil])
([nil nil ((3143 . 3144) 3110) nil (26267 19907 415600 469000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3563)) nil (26267 19907 415599 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3563)) nil (26267 19907 415599 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3563)) nil (26267 19907 415598 826000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3563)) nil (26267 19907 415598 255000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3773) (undo-tree-id3303 . -2) (undo-tree-id3304 . -2) (undo-tree-id3305 . -2) (undo-tree-id3306 . -2) 3775) nil (26267 19907 415597 544000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4050) (undo-tree-id3299 . -2) (undo-tree-id3300 . -2) (undo-tree-id3301 . -2) (undo-tree-id3302 . -2) 4052) nil (26267 19907 415594 899000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3446) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) 3447) nil (26267 19907 415591 803000) 0 nil])
([nil nil ((nil ws-butler-chg delete 3448 . 3449) (3446 . 3448)) nil (26267 19907 415588 958000) 0 nil])
([nil nil (3594) nil (26267 19907 415588 246000) 0 nil])
([nil nil ((3595 . 3597) (#("j" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3595) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) 3596 (3595 . 3596)) nil (26267 19907 415586 613000) 0 nil])
([nil nil ((3681 . 3683)) nil (26267 19907 415552 199000) 0 nil])
([nil nil ((3813 . 3814) (3812 . 3813)) nil (26267 19907 415551 257000) 0 nil])
([nil nil ((#("" 0 1 (fontified nil ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3812) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3813)) nil (26267 19907 415550 185000) 0 nil])
([nil nil ((apply -2 3809 4055 undo--wrap-and-run-primitive-undo 3809 4055 ((3984 . 3985) nil (3914 . 3915))) (3811 . 3812)) nil (26267 19907 415547 961000) 0 nil])
([nil nil ((apply -2 4080 4419 undo--wrap-and-run-primitive-undo 4080 4419 ((4321 . 4322) nil (4193 . 4194))) (4082 . 4083)) nil (26267 19907 415547 500000) 0 nil])
([nil nil ((apply -1 4474 4666 undo--wrap-and-run-primitive-undo 4474 4666 ((4570 . 4571))) (4476 . 4477)) nil (26267 19907 415546 979000) 0 nil])
([nil nil ((apply -1 4703 4882 undo--wrap-and-run-primitive-undo 4703 4882 ((4791 . 4792))) (4705 . 4706)) nil (26267 19907 415546 338000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4421) (undo-tree-id3251 . -2) (undo-tree-id3252 . -2) (undo-tree-id3253 . -2)) nil (26267 19907 415545 696000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4665) (undo-tree-id3247 . -2) (undo-tree-id3248 . -2) (undo-tree-id3249 . -2) (undo-tree-id3250 . -2) 4667) nil (26267 19907 415543 843000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4787) (undo-tree-id3246 . 1) (4784 . 4787) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4700) (4697 . 4700) 4783) nil (26267 19907 415541 158000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4575) (4572 . 4575) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4480) (4477 . 4480) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4327) (4324 . 4327) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4198) (4195 . 4198) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4086) (4083 . 4086) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3987) (3984 . 3987) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3916) (3913 . 3916) (#("  " 0 2 (fontified nil ws-butler-chg chg wrap-prefix #("           " 0 4 (face org-indent) 4 11 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3812) (3809 . 3812) 3323) nil (26267 19907 415538 954000) 0 nil])
([nil nil ((3445 . 3446) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3445) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (3353 . 3354) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3353) 3445) nil (26267 19907 415536 780000) 0 nil])
([nil nil ((3681 . 3682) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3681) (3595 . 3596) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3595) 3681) nil (26267 19907 415533 564000) 0 nil])
([nil nil ((3916 . 3917) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3916) (3812 . 3813) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -3812) 3916) nil (26267 19907 415532 391000) 0 nil])
([nil nil ((3987 . 3988) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 3987)) nil (26267 19907 415530 307000) 0 nil])
([nil nil ((4327 . 4328) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4327) (4198 . 4199) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4198) (4086 . 4087) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4086) 4327) nil (26267 19907 415528 885000) 0 nil])
([nil nil ((4575 . 4576) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4575) (4480 . 4481) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4480) 4575) nil (26267 19907 415527 392000) 0 nil])
([nil nil ((4795 . 4796) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4795) (4708 . 4709) (#("+" 0 1 (face org-superstar-item composition (4 1 [10148]) fontified t ws-butler-chg delete wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -4708) 4795) nil (26267 19907 415525 649000) 0 nil])
([nil nil ((4907 . 4908) (4898 . 4907) (4893 . 4893) (4893 . 4898) (4887 . 4893) 4887) nil (26267 19907 415524 727000) 0 nil])
([nil nil ((#("     " 0 5 (ws-butler-chg chg wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4888) (undo-tree-id3241 . -4) (undo-tree-id3242 . -4) (undo-tree-id3243 . -4)) nil (26267 19907 415523 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6103 . 6104) (nil fontified nil 5885 . 6104) (nil fontified nil 5884 . 5885) (nil fontified nil 5660 . 5884) (nil fontified nil 5510 . 5660) (nil fontified nil 5311 . 5510) (nil fontified nil 5135 . 5311) (nil fontified nil 5079 . 5135) (nil fontified nil 5078 . 5079) (nil fontified nil 4905 . 5078) (nil fontified nil 4904 . 4905) (nil fontified nil 4903 . 4904) (4903 . 6104)) nil (26267 19907 415520 719000) 0 nil])
([nil nil ((4905 . 4906)) nil (26267 19907 415518 786000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4904)) nil (26267 19907 415518 255000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4903)) nil (26267 19907 415517 383000) 0 nil])
([nil nil ((4902 . 4903) 4888) nil (26267 19907 415516 461000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t ws-butler-chg chg wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 4906) (undo-tree-id3237 . -2) (undo-tree-id3238 . -2) (undo-tree-id3239 . -2) (undo-tree-id3240 . -2) 4908) nil (26267 19907 415515 810000) 0 nil])
([nil nil ((5078 . 5079)) nil (26267 19907 415512 945000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5079) (undo-tree-id3236 . 1)) nil (26267 19907 415512 123000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5076) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1)) nil (26267 19907 415510 711000) 0 nil])
([nil nil ((5137 . 5138)) nil (26267 19907 415508 567000) 0 nil])
([nil nil ((#("-" 0 1 (face org-superstar-item composition (0 1 [8211]) fontified t ws-butler-chg chg wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5137)) nil (26267 19907 415507 224000) 0 nil])
([nil nil ((apply -3 5130 5882 undo--wrap-and-run-primitive-undo 5130 5882 ((5664 . 5665) nil (5513 . 5514) nil (5313 . 5314))) (5136 . 5137)) nil (26267 19907 415506 382000) 0 nil])
([nil nil ((5887 . 5888)) nil (26267 19907 415505 411000) 0 nil])
([nil nil ((#("   " 0 3 (fontified nil ws-butler-chg chg wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -5872) (5868 . 5872) (#("      " 0 6 (fontified nil ws-butler-chg chg wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -5648) (5646 . 5648) (#("      " 0 6 (fontified nil ws-butler-chg chg wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -5501) (5499 . 5501) (#("      " 0 6 (fontified nil ws-butler-chg chg wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -5305) (5303 . 5305) (#("      " 0 6 (fontified nil ws-butler-chg chg wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -5132) (5130 . 5132) 4903) nil (26267 19907 415503 808000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 5868) (undo-tree-id3230 . -3) (undo-tree-id3231 . -3) (undo-tree-id3232 . -3)) nil (26267 19907 415501 754000) 0 nil])
([nil nil ((261 . 263) (#("p" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -261) (undo-tree-id3222 . -1) 262 (261 . 262) (#("W" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -261) (undo-tree-id3223 . -1) 262 (261 . 262) (#("w" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -261) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (#("e" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -262) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (#("b" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -263) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) 264 (263 . 264) (259 . 259) (259 . 263) (255 . 259) (nil isearch-open-invisible org-fold-core--isearch-show 254 . 255) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 254 . 255) (nil font-lock-multiline t 254 . 255) (nil face org-link 254 . 255) (nil fontified t 254 . 255) (nil line-prefix #("  " 0 2 (face org-indent)) 254 . 255) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 254 . 255) (254 . 255) 217) nil (26267 19907 415498 498000) 0 nil])
([nil nil ((262 . 263) (261 . 262)) nil (26267 19907 415491 885000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 261) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (#("u" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 262)) nil (26267 19907 415490 773000) 0 nil])
([nil nil ((#("
" 0 1 (face org-link font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 254) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 254 . 255) (nil fontified nil 254 . 255) (nil face nil 254 . 255) (nil font-lock-multiline nil 254 . 255) (nil isearch-open-invisible-temporary nil 254 . 255) (nil isearch-open-invisible nil 254 . 255) (#("    " 0 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 255) (undo-tree-id3204 . -4) (undo-tree-id3205 . -4) (undo-tree-id3206 . -4) (undo-tree-id3207 . -4) (undo-tree-id3208 . -4) (#("- we" 0 1 (face org-superstar-item composition (0 1 [8211]) ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 259) (undo-tree-id3209 . -2) (undo-tree-id3210 . -2) (undo-tree-id3211 . -4) (undo-tree-id3212 . -4) (undo-tree-id3213 . -2) (#("b" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 263) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (261 . 264) (#("W" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 261) (undo-tree-id3216 . -1) (261 . 262) (#("p" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 261) (undo-tree-id3217 . -1) (261 . 262) (#("[]" 0 2 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 261) (undo-tree-id3218 . 2)) nil (26267 19907 415486 896000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -214) (undo-tree-id3165 . -4) (undo-tree-id3166 . -4) (undo-tree-id3167 . -4) (undo-tree-id3168 . -4) (undo-tree-id3169 . -4) (undo-tree-id3170 . -4) (undo-tree-id3171 . -4) (undo-tree-id3172 . -4) (undo-tree-id3173 . -4) (undo-tree-id3174 . -4) (undo-tree-id3175 . -4) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) (undo-tree-id3178 . -4) (undo-tree-id3179 . -4) (undo-tree-id3180 . -4) (undo-tree-id3181 . -4) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (undo-tree-id3185 . -4) (undo-tree-id3186 . -4) (undo-tree-id3187 . -4) (undo-tree-id3188 . -4) (undo-tree-id3189 . -4) (undo-tree-id3190 . -4) (undo-tree-id3191 . -4) (undo-tree-id3192 . -4) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) (undo-tree-id3198 . -4) 218 (214 . 218) (214 . 215)) nil (26267 19907 415473 761000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 214) (undo-tree-id3131 . 1) (#("    " 0 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 214) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -4) (undo-tree-id3135 . -4) (undo-tree-id3136 . -4) (undo-tree-id3137 . -4) (undo-tree-id3138 . -4) (undo-tree-id3139 . -4) (undo-tree-id3140 . -4) (undo-tree-id3141 . -4) (undo-tree-id3142 . -4) (undo-tree-id3143 . -4) (undo-tree-id3144 . -4) (undo-tree-id3145 . -4) (undo-tree-id3146 . -4) (undo-tree-id3147 . -4) (undo-tree-id3148 . -4) (undo-tree-id3149 . -4) (undo-tree-id3150 . -4) (undo-tree-id3151 . -4) (undo-tree-id3152 . -4) (undo-tree-id3153 . -4) (undo-tree-id3154 . -4) (undo-tree-id3155 . -4) (undo-tree-id3156 . -4) (undo-tree-id3157 . -4) (undo-tree-id3158 . -4) (undo-tree-id3159 . -4) (undo-tree-id3160 . -4) (undo-tree-id3161 . -4) (undo-tree-id3162 . -4) (undo-tree-id3163 . -4) (undo-tree-id3164 . -4) (nil ws-butler-chg delete 218 . 219) (214 . 218)) nil (26267 19907 415456 398000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -214) (undo-tree-id3130 . -4) 218 (214 . 218) (214 . 215)) nil (26267 19907 415436 170000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 214) (undo-tree-id3128 . 1) (#("    " 0 4 (ws-butler-chg chg wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 214) (undo-tree-id3129 . -4) (nil ws-butler-chg delete 218 . 219) (214 . 218)) nil (26267 19907 415434 257000) 0 nil])
([nil nil ((256 . 259) 214) nil (26267 19907 415432 373000) 0 nil])
([nil nil ((#("* 
" 0 1 (composition (1 1 [9673]) face (org-superstar-header-bullet org-level-1) ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (face org-level-1 ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 2 3 (ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 256) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1)) nil (26267 19907 415431 612000) 0 nil])
([nil nil ((256 . 259) 252) nil (26267 19907 415429 348000) 0 nil])
([nil nil ((#("* 
" 0 1 (composition (1 1 [9673]) face (org-superstar-header-bullet org-level-1) ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (face org-level-1 ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 2 3 (ws-butler-chg chg wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 256) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1)) nil (26267 19907 415428 195000) 0 nil])
([nil nil ((261 . 262) (259 . 261) (255 . 259) (nil isearch-open-invisible org-fold-core--isearch-show 254 . 255) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 254 . 255) (nil font-lock-multiline t 254 . 255) (nil face org-link 254 . 255) (nil fontified t 254 . 255) (nil line-prefix #("  " 0 2 (face org-indent)) 254 . 255) (nil wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) 254 . 255) (254 . 255) 251) nil (26267 19907 415425 621000) 0 nil])
([nil nil ((261 . 262)) nil (26267 19907 415423 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 272 . 273) (nil fontified nil 262 . 273) (262 . 273) 261) nil (26267 19907 415423 406000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 261)) nil (26267 19907 415422 364000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -262) (undo-tree-id3121 . -1) 263 (262 . 263) (261 . 263)) nil (26267 19907 415421 523000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg delete wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 262) (undo-tree-id3120 . 1)) nil (26267 19907 415419 279000) 0 nil])
([nil nil ((274 . 275) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -274) (274 . 275) (273 . 274) (#("]" 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -273) (273 . 274)) nil (26267 19907 415417 155000) 0 nil])
([nil nil ((261 . 262)) nil (26267 19907 415415 341000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg delete wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 257) (#("l" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -257) (undo-tree-id3117 . -1) (#("v" 0 1 (ws-butler-chg chg wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -258) (undo-tree-id3118 . -1) 259 (257 . 259) (#(" " 0 1 (ws-butler-chg chg wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 257) (undo-tree-id3119 . -1) 258) nil (26267 19907 415411 434000) 0 nil])
([nil nil ((#("2024-07-20" 0 10 (wrap-prefix "" line-prefix "" face org-document-info font-lock-fontified t fontified t)) . 79) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . -9) (undo-tree-id480 . -9) 88 (t 26267 19907 440210 212000)) nil (26267 53992 349611 42000) 0 nil])
([nil nil ((#("202" 0 3 (face org-document-info font-lock-fontified t ws-butler-chg chg wrap-prefix "" line-prefix "" fontified nil)) . 95) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (79 . 95) 82 (79 . 79) (79 . 82)) nil (26267 53992 349608 26000) 0 nil])
([nil nil ((#("202" 0 3 (face org-document-info font-lock-fontified t ws-butler-chg chg wrap-prefix "" line-prefix "" fontified nil)) . 79) (undo-tree-id470 . -3) (#("<2024-07-20 Sat>" 0 15 (font-lock-fontified t face org-document-info keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight ws-butler-chg chg wrap-prefix "" line-prefix "" fontified nil) 15 16 (font-lock-fontified t face org-document-info rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight ws-butler-chg chg wrap-prefix "" line-prefix "" fontified nil)) . 79) (undo-tree-id471 . -9) (undo-tree-id472 . -9) (undo-tree-id473 . -9) (undo-tree-id474 . -9) (nil ws-butler-chg delete 98 . 99) (95 . 98)) nil (26267 53992 349605 442000) 0 nil])
([nil nil ((79 . 89)) nil (26267 53992 349601 805000) 0 nil])
([nil nil ((93 . 100) (89 . 89) (89 . 93) (t 26267 19907 440210 212000)) nil (26267 53992 349600 823000) 0 nil])
([nil nil ((#(" 202" 0 4 (face org-document-info ws-butler-chg chg wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 89) (undo-tree-id318 . -4) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (#("4-07-20" 0 7 (face org-document-info ws-butler-chg chg wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 93) (undo-tree-id432 . -6) (undo-tree-id433 . -7) (undo-tree-id434 . -7) (undo-tree-id435 . -7) (undo-tree-id436 . -7) (undo-tree-id437 . -7) (undo-tree-id438 . -7) (undo-tree-id439 . -7) (undo-tree-id440 . -7) (undo-tree-id441 . -7) (undo-tree-id442 . -7) (undo-tree-id443 . -7) (undo-tree-id444 . -7) (undo-tree-id445 . -7) (undo-tree-id446 . -7) (undo-tree-id447 . -7) (undo-tree-id448 . -7) (undo-tree-id449 . -7) (undo-tree-id450 . -7) (undo-tree-id451 . -7) (undo-tree-id452 . -7) (undo-tree-id453 . -7) (undo-tree-id454 . -7) (undo-tree-id455 . -7) (undo-tree-id456 . -7) (undo-tree-id457 . -7) (undo-tree-id458 . -7) (undo-tree-id459 . -7) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -7) (undo-tree-id465 . -6) (undo-tree-id466 . -6) (undo-tree-id467 . -6) (undo-tree-id468 . -6) (undo-tree-id469 . -6)) nil (26267 53992 349595 904000) 0 nil])
([nil nil ((#("2024-07-20" 0 10 (face org-document-info wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 79) (undo-tree-id40 . -9) (undo-tree-id41 . -9) (undo-tree-id42 . -9) (undo-tree-id43 . -9) (undo-tree-id44 . -9) (undo-tree-id45 . -9) (undo-tree-id46 . -9) (undo-tree-id47 . -9) (undo-tree-id48 . -9) (undo-tree-id49 . -9) (undo-tree-id50 . -9) (undo-tree-id51 . -9) (undo-tree-id52 . -9) (undo-tree-id53 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id57 . -10) (undo-tree-id58 . -10) (undo-tree-id59 . -10) (undo-tree-id60 . -10) (undo-tree-id61 . -10) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -10) (undo-tree-id66 . -10) (undo-tree-id67 . -10) (undo-tree-id68 . -10) (undo-tree-id69 . -10) (undo-tree-id70 . -10) (undo-tree-id71 . -10) (undo-tree-id72 . -10) (undo-tree-id73 . -10) (undo-tree-id74 . -10) (undo-tree-id75 . -10) (undo-tree-id76 . -10) (undo-tree-id77 . -10) (undo-tree-id78 . -10) (undo-tree-id79 . -10) (undo-tree-id80 . -10) (undo-tree-id81 . -10) (undo-tree-id82 . -10) (undo-tree-id83 . -10) (undo-tree-id84 . -10) (undo-tree-id85 . -10) (undo-tree-id86 . -10) (undo-tree-id87 . -10) (undo-tree-id88 . -10) (undo-tree-id89 . -10) (undo-tree-id90 . -10) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -10) (undo-tree-id94 . -10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -10) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -10) (undo-tree-id101 . -10) (undo-tree-id102 . -10) (undo-tree-id103 . -10) (undo-tree-id104 . -10) (undo-tree-id105 . -10) (undo-tree-id106 . -10) (undo-tree-id107 . -10) (undo-tree-id108 . -10) (undo-tree-id109 . -10) (undo-tree-id110 . -10) (undo-tree-id111 . -10) (undo-tree-id112 . -10) (undo-tree-id113 . -10) (undo-tree-id114 . -10) (undo-tree-id115 . -10) (undo-tree-id116 . -10) (undo-tree-id117 . -10) (undo-tree-id118 . -10) (undo-tree-id119 . -10) (undo-tree-id120 . -10) (undo-tree-id121 . -10) (undo-tree-id122 . -10) (undo-tree-id123 . -10) (undo-tree-id124 . -10) (undo-tree-id125 . -10) (undo-tree-id126 . -10) (undo-tree-id127 . -10) (undo-tree-id128 . -10) (undo-tree-id129 . -10) (undo-tree-id130 . -10) (undo-tree-id131 . -10) (undo-tree-id132 . -10) (undo-tree-id133 . -10) (undo-tree-id134 . -10) (undo-tree-id135 . -10) (undo-tree-id136 . -10) (undo-tree-id137 . -10) (undo-tree-id138 . -10) (undo-tree-id139 . -10) (undo-tree-id140 . -10) (undo-tree-id141 . -10) (undo-tree-id142 . -10) (undo-tree-id143 . -10) (undo-tree-id144 . -10) (undo-tree-id145 . -10) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (undo-tree-id148 . -10) (undo-tree-id149 . -10) (undo-tree-id150 . -10) (undo-tree-id151 . -10) (undo-tree-id152 . -10) (undo-tree-id153 . -10) (undo-tree-id154 . -10) (undo-tree-id155 . -10) (undo-tree-id156 . -10) (undo-tree-id157 . -10) (undo-tree-id158 . -10) (undo-tree-id159 . -10) (undo-tree-id160 . -10) (undo-tree-id161 . -10) (undo-tree-id162 . -10) (undo-tree-id163 . -10) (undo-tree-id164 . -10) (undo-tree-id165 . -10) (undo-tree-id166 . -10) (undo-tree-id167 . -10) (undo-tree-id168 . -10) (undo-tree-id169 . -10) (undo-tree-id170 . -10) (undo-tree-id171 . -10) (undo-tree-id172 . -10) (undo-tree-id173 . -10) (undo-tree-id174 . -10) (undo-tree-id175 . -10) (undo-tree-id176 . -10) (undo-tree-id177 . -10) (undo-tree-id178 . -10) (undo-tree-id179 . -10) (undo-tree-id180 . -9) (undo-tree-id181 . -10) (undo-tree-id182 . -10) (undo-tree-id183 . -9) (undo-tree-id184 . -9) (undo-tree-id185 . -9) (undo-tree-id186 . -9) (undo-tree-id187 . -9) (undo-tree-id188 . -9) (undo-tree-id189 . -9) (undo-tree-id190 . -9) (undo-tree-id191 . -9) (undo-tree-id192 . -9) (undo-tree-id193 . -9) (undo-tree-id194 . -9) (undo-tree-id195 . -9) (undo-tree-id196 . -9) (undo-tree-id197 . -9) (undo-tree-id198 . -9) (undo-tree-id199 . -9) (undo-tree-id200 . -9) (undo-tree-id201 . -9) (undo-tree-id202 . -9) (undo-tree-id203 . -9) (undo-tree-id204 . -9) (undo-tree-id205 . -10) (undo-tree-id206 . -9) (undo-tree-id207 . -9) (undo-tree-id208 . -9) (undo-tree-id209 . -9) (undo-tree-id210 . -9) (undo-tree-id211 . -9) (undo-tree-id212 . -9) (undo-tree-id213 . -9) (undo-tree-id214 . -9) (undo-tree-id215 . -9) (undo-tree-id216 . -9) (undo-tree-id217 . -9) (undo-tree-id218 . -9) (undo-tree-id219 . -9) (undo-tree-id220 . -9) (undo-tree-id221 . -9) (undo-tree-id222 . -9) (undo-tree-id223 . -9) (undo-tree-id224 . -9) (undo-tree-id225 . -9) (undo-tree-id226 . -9) (undo-tree-id227 . -9) (undo-tree-id228 . -9) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (undo-tree-id239 . -9) (undo-tree-id240 . -9) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (undo-tree-id243 . -9) (undo-tree-id244 . -9) (undo-tree-id245 . -9) (undo-tree-id246 . -9) (undo-tree-id247 . -9) (undo-tree-id248 . -9) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (undo-tree-id251 . -9) (undo-tree-id252 . -9) (undo-tree-id253 . -9) (undo-tree-id254 . -9) (undo-tree-id255 . -9) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -7) (undo-tree-id272 . -7) (undo-tree-id273 . -7) (undo-tree-id274 . -7) (undo-tree-id275 . -7) (undo-tree-id276 . -7) (undo-tree-id277 . -7) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -7) (undo-tree-id283 . -7) (undo-tree-id284 . -7) (undo-tree-id285 . -7) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -10) (undo-tree-id317 . -10) (t 26267 19907 440210 212000)) nil (26267 53992 349519 927000) 0 nil])
([nil current ((#("202" 0 3 (face org-document-info font-lock-fontified t ws-butler-chg chg wrap-prefix "" line-prefix "" fontified nil)) . 95) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (79 . 95) 82 (79 . 79) (79 . 82)) nil (26267 53992 349352 914000) 0 nil])
nil
